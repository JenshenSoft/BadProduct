apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'android-apt'
apply plugin: 'me.tatarka.retrolambda'


android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "ua.regin.badproduct"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
            res.srcDirs = show('src/main/res/layouts');
        }
    }
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:preference-v14:23.1.1'
    //Android Annotations
    apt 'org.androidannotations:androidannotations:3.3.2'
    compile 'org.androidannotations:androidannotations-api:3.3.2'
    //RxAndroid
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.trello:rxlifecycle:0.3.0'
    compile 'com.trello:rxlifecycle-components:0.3.0'
    //Canary Leak
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    //Picasso
    compile 'com.squareup.picasso:picasso:2.5.2'
    //Stream API
    compile 'com.annimon:stream:1.0.4'
    //Smooth progress bar
    compile 'com.github.castorflex.smoothprogressbar:library-circular:1.2.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.2.2@aar') {
        transitive = true;
    }
    //GCM
    compile 'com.google.android.gms:play-services-gcm:8.3.0'
    //Google analytics
    compile 'com.google.android.gms:play-services-analytics:8.3.0'
    //Firebase
    compile 'com.firebaseui:firebase-ui:0.3.0'
    compile 'com.firebase:firebase-client-android:2.5.0'
    //Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //Dagger 2
    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
    provided 'org.glassfish:javax.annotation:10.0-b28'
}

buildscript {
   ext.kotlin_version = '1.0.0-beta-4584'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}

def show(String... resPath) {
    String APP_FOLDER = "app/";
    def folderList = []
    resPath.each { item ->
        new File(APP_FOLDER + item).eachDir { dir ->
            folderList << dir.getPath().replace(APP_FOLDER, "");
        }
        folderList.add(item);
    }

    folderList.add('src/main/res');
    println("Using as resourse folders: ")
    folderList.each { it -> println(it) }
    return folderList;
}